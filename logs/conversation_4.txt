 SystemMessage 
You are an AI agent designed to automate browser tasks. Your goal is to accomplish the ultimate task following the rules.

# Input Format

Task
Previous steps
Current URL
Open Tabs
Interactive Elements
[index]<type>text</type>

- index: Numeric identifier for interaction
- type: HTML element type (button, input, etc.)
- text: Element description
  Example:
  [33]<div>User form</div>
  \t*[35]*<button aria-label='Submit form'>Submit</button>

- Only elements with numeric indexes in [] are interactive
- (stacked) indentation (with \t) is important and means that the element is a (html) child of the element above (with a lower index)
- Elements with \* are new elements that were added after the previous step (if url has not changed)

# Response Rules

1. RESPONSE FORMAT: You must ALWAYS respond with valid JSON in this exact format:
   {"current_state": {"evaluation_previous_goal": "Success|Failed|Unknown - Analyze the current elements and the image to check if the previous goals/actions are successful like intended by the task. Mention if something unexpected happened. Shortly state why/why not",
   "memory": "Description of what has been done and what you need to remember. Be very specific. Count here ALWAYS how many times you have done something and how many remain. E.g. 0 out of 10 websites analyzed. Continue with abc and xyz",
   "next_goal": "What needs to be done with the next immediate action"},
   "action":[{"one_action_name": {// action-specific parameter}}, // ... more actions in sequence]}

2. ACTIONS: You can specify multiple actions in the list to be executed in sequence. But always specify only one action name per item. Use maximum 10 actions per sequence.
Common action sequences:

- Form filling: [{"input_text": {"index": 1, "text": "username"}}, {"input_text": {"index": 2, "text": "password"}}, {"click_element": {"index": 3}}]
- Navigation and extraction: [{"go_to_url": {"url": "https://example.com"}}, {"extract_content": {"goal": "extract the names"}}]
- Actions are executed in the given order
- If the page changes after an action, the sequence is interrupted and you get the new state.
- Only provide the action sequence until an action which changes the page state significantly.
- Try to be efficient, e.g. fill forms at once, or chain actions where nothing changes on the page
- only use multiple actions if it makes sense.

3. ELEMENT INTERACTION:

- Only use indexes of the interactive elements

4. NAVIGATION & ERROR HANDLING:

- If no suitable elements exist, use other functions to complete the task
- If stuck, try alternative approaches - like going back to a previous page, new search, new tab etc.
- Handle popups/cookies by accepting or closing them
- Use scroll to find elements you are looking for
- If you want to research something, open a new tab instead of using the current tab
- If captcha pops up, try to solve it - else try a different approach
- If the page is not fully loaded, use wait action

5. TASK COMPLETION:

- Use the done action as the last action as soon as the ultimate task is complete
- Dont use "done" before you are done with everything the user asked you, except you reach the last step of max_steps.
- If you reach your last step, use the done action even if the task is not fully finished. Provide all the information you have gathered so far. If the ultimate task is completely finished set success to true. If not everything the user asked for is completed set success in done to false!
- If you have to do something repeatedly for example the task says for "each", or "for all", or "x times", count always inside "memory" how many times you have done it and how many remain. Don't stop until you have completed like the task asked you. Only call done after the last step.
- Don't hallucinate actions
- Make sure you include everything you found out for the ultimate task in the done text parameter. Do not just say you are done, but include the requested information of the task.

6. VISUAL CONTEXT:

- When an image is provided, use it to understand the page layout
- Bounding boxes with labels on their top right corner correspond to element indexes

7. Form filling:

- If you fill an input field and your action sequence is interrupted, most often something changed e.g. suggestions popped up under the field.

8. Long tasks:

- Keep track of the status and subresults in the memory.
- You are provided with procedural memory summaries that condense previous task history (every N steps). Use these summaries to maintain context about completed actions, current progress, and next steps. The summaries appear in chronological order and contain key information about navigation history, findings, errors encountered, and current state. Refer to these summaries to avoid repeating actions and to ensure consistent progress toward the task goal.

9. Extraction:

- If your task is to find information - call extract_content on the specific pages to get and store the information.
  Your responses must be always JSON with the specified format.

 HumanMessage 
Your ultimate task is: """1. Go to amazon.com
        2. Search for macbook pro.""". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.

 HumanMessage 
Example output:

 AIMessage 


 ToolMessage 
Browser started

 HumanMessage 
[Your task history memory starts here]

 HumanMessage 
Action result: üîó  Opened new tab with https://www.google.com

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: üîó  Navigated to https://www.amazon.com

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: ‚å®Ô∏è  Input macbook pro into index 3

 HumanMessage 
[Task history memory ends]
[Current state starts here]
The following is one-time information - if you need to remember it write it to memory:
Current url: https://www.amazon.com/
Available tabs:
[TabInfo(page_id=0, url='https://www.amazon.com/', title='Amazon.com. Spend less. Smile more.', parent_page_id=None)]
Interactive elements from top layer of the current page inside the viewport:
[Start of page]
[0]<a aria-label='Amazon'>.us />
[1]<a role='button' />
	[2]<div >Deliver to
India />
*[3]*<input type='text' value='' name='field-keywords' placeholder='Search Amazon' aria-label='Search Amazon' role='searchbox' aria-expanded='true' />
[4]<div  />
	[5]<input type='submit' value='Go' />
[6]<a aria-label='Choose a language for shopping in Amazon United States. The current selection is English (EN).
' />
	[7]<span  />
		[8]<span >EN />
[9]<button aria-label='Expand to Change Language or Country' />
[10]<a >Account & Lists />
	[11]<div >Hello, sign in />
[12]<button aria-label='Expand Account and Lists' />
[13]<a >Returns
& Orders />
[14]<a aria-label='0 items in cart' />
	[15]<div >0 />
	[16]<div >Cart />
*[17]*<div role='gridcell' />
	*[18]*<div role='button'>macbook pro />
*[19]*<div role='gridcell' />
	*[20]*<div role='button' aria-label='macbook pro m4'>macbook pro
m4 />
*[21]*<div role='gridcell' />
	*[22]*<div role='button' aria-label='macbook pro charger'>macbook pro
charger />
*[23]*<div role='gridcell' />
	*[24]*<div role='button' aria-label='macbook pro 14 inch case'>macbook pro
14 inch case />
*[25]*<div role='gridcell' />
	*[26]*<div role='button' aria-label='macbook pro 16 inch'>macbook pro
16 inch />
*[27]*<div role='gridcell' />
	*[28]*<div role='button' aria-label='macbook pro 13 inch case'>macbook pro
13 inch case />
*[29]*<div role='gridcell' />
	*[30]*<div role='button' aria-label='macbook pro m1'>macbook pro
m1 />
*[31]*<div role='gridcell' />
	*[32]*<div role='button' aria-label='macbook pro m2'>macbook pro
m2 />
*[33]*<div role='gridcell' />
	*[34]*<div role='button' aria-label='macbook pro m3'>macbook pro
m3 />
*[35]*<div role='gridcell' />
	*[36]*<div role='button' aria-label='macbook pro case'>macbook pro
case />
We're showing you items that ship to
India
. To see items that ship to a different country, change your delivery address.
[37]<span >Dismiss />
	[38]<input type='submit' />
[39]<span >Change Address />
	[40]<input type='submit' />
[41]<a role='button' aria-label='Open All Categories Menu' aria-expanded='false'>All />
... 4926 pixels below - scroll or extract content to see more ...
Current step: 3/100Current date and time: 2025-06-12 00:20

 RESPONSE
{
  "current_state": {
    "evaluation_previous_goal": "Success - I have successfully inputted \"macbook pro\" into the search bar.",
    "memory": "I need to go to amazon.com and search for macbook pro. I have inputted the text and now I need to click the search button.",
    "next_goal": "Click the search button."
  },
  "action": [
    {
      "click_element_by_index": {
        "index": 5
      }
    }
  ]
}